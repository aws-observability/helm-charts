{{- if .Values.containerLogs.enabled }}
{{- $clusterName := .Values.clusterName | required ".Values.clusterName is required." -}}
{{- $region := .Values.region | required ".Values.region is required." -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: fluent-bit
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluent-bit
  updateStrategy:
    type: {{ .Values.containerLogs.fluentBit.updateStrategy.type }}
    {{- if eq .Values.containerLogs.fluentBit.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.containerLogs.fluentBit.updateStrategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.containerLogs.fluentBit.updateStrategy.rollingUpdate.maxSurge }}
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/linux/fluent-bit-configmap.yaml") . | sha256sum }}
      labels:
        k8s-app: fluent-bit
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: fluent-bit
        image: {{ template "fluent-bit.image" . }}
        imagePullPolicy: Always
        env:
        - name: AWS_REGION
          value: {{ .Values.region }}
        - name: CLUSTER_NAME
          value: {{ .Values.clusterName | quote }}
        - name: READ_FROM_HEAD
          value: "Off"
        - name: READ_FROM_TAIL
          value: "On"
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CI_VERSION
          value: "k8s/1.3.17"
        {{- with .Values.containerLogs.fluentBit.resources }}
        resources: {{- toYaml . | nindent 10}}
        {{- end }}
        volumeMounts:
        # Please don't change below read-only permissions
        - name: fluentbitstate
          mountPath: /var/fluent-bit/state
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: runlogjournal
          mountPath: /run/log/journal
          readOnly: true
        - name: dmesg
          mountPath: /var/log/dmesg
          readOnly: true
        - mountPath: /etc/amazon-cloudwatch-observability-agent-client-cert
          name: agentclienttls
          readOnly: true
        - mountPath: /etc/amazon-cloudwatch-observability-agent-server-cert
          name: agentservertls
          readOnly: true
      terminationGracePeriodSeconds: 10
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: {{ .Values.containerLogs.fluentBit.priorityClassName }}
      volumes:
      - name: fluentbitstate
        hostPath:
          path: /var/fluent-bit/state
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: dmesg
        hostPath:
          path: /var/log/dmesg
      - name: agentclienttls
        secret:
          secretName: amazon-cloudwatch-observability-agent-client-cert
          items:
            - key: tls.crt
              path: client.crt
            - key: tls.key
              path: client.key
      - name: agentservertls
        secret:
          secretName: amazon-cloudwatch-observability-agent-server-cert
          items:
            - key: ca.crt
              path: tls-ca.crt
      serviceAccountName: {{ template "cloudwatch-agent.serviceAccountName" . }}
      {{- with .Values.containerLogs.fluentBit.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.containerLogs.fluentBit.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- dict "component" .Values.containerLogs.fluentBit "context" . | include "amazon-cloudwatch-observability.common.tolerations" | nindent 6 }}
{{- end }}